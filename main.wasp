app askTheDocuments {
  wasp: {
    version: "^0.12.0"
  },
  title: "PG Vector Example",
  auth: {
    userEntity: User,
    methods: {
      google: {
        userSignupFields: import { fields } from "@src/auth/google.js",
        configFn: import { getConfig } from "@src/auth/google.js",
      }
    },
    onAuthFailedRedirectTo: "/"
  },
  client: {
    rootComponent: import { Layout } from "@src/Layout.tsx",
  },
  db: {
    system: PostgreSQL,
    prisma: {
      clientPreviewFeatures: ["postgresqlExtensions"],
      dbExtensions: [{
        name: "pgvector",
        map: "vector"
      }]
    }
  }
}

entity User {=psl
  id                        Int           @id @default(autoincrement())
  email                     String?
psl=}

entity Document {=psl
  id String @id @default(uuid())
  title String
  url String @unique
  content String
  embedding Unsupported("vector(1536)")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
psl=}

route RootRoute { path: "/", to: MainPage }
page MainPage {
  component: import { Main } from "@src/pages/MainPage.tsx"
}

action embedDocument {
  fn: import { embedDocument } from "@src/documents.js",
  entities: [Document],
}

action getScrapeCandidates {
  fn: import { getScrapeCandidates } from "@src/documents.js",
  entities: [Document],
}

query getDocuments {
  fn: import { getDocuments } from "@src/documents.js",
  entities: [Document]
}

action searchDocuments {
  fn: import { searchDocuments } from "@src/documents.js",
  entities: [Document]
}

action askDocuments {
  fn: import { askDocuments } from "@src/documents.js",
  entities: [Document]
}

action deleteDocument {
  fn: import { deleteDocument } from "@src/documents.js",
  entities: [Document]
}
